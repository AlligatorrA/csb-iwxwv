{"version":3,"sources":["App.js","index.js"],"names":["emojiDictonary","emojiWeKnow","Object","keys","App","useState","meaning","setMeaning","className","onChange","event","userInput","target","value","undefined","map","emoji","onClick","emojiClickHandler","style","fontSize","padding","cursor","rootElement","document","getElementById","ReactDOM","render"],"mappings":"gLAsCIA,EAAiB,CACnB,eAAM,gBACN,eAAM,8BACN,eAAM,kCACN,eAAM,iCACN,eAAM,0BACN,eAAM,2BACN,eAAM,gCACN,eAAM,yBACN,eAAM,wBACN,eAAM,mBACN,eAAM,iCACN,eAAM,0BACN,eAAM,4BAEJC,EAAcC,OAAOC,KAAKH,GAEf,SAASI,IACtB,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAiBA,OACE,sBAAKC,UAAU,MAAf,UACE,oDAEA,uBAAOC,SAnBX,SAA2BC,GACzB,IAAIC,EAAYD,EAAME,OAAOC,MACzBP,EAAUN,EAAeW,QAEbG,IAAZR,IACFA,EAAU,cAGZC,EAAWD,MAYT,6BAAKA,IAEL,mDACCL,EAAYc,KAAI,SAAUC,GACzB,OACE,sBACEC,QAAS,kBAhBnB,SAA2BD,GAEzBT,EADcP,EAAegB,IAeNE,CAAkBF,IACjCG,MAAO,CAAEC,SAAU,OAAQC,QAAS,OAAQC,OAAQ,WAFtD,SAKGN,GAFIA,SCjFjB,IAAMO,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACvB,EAAD,MAEFmB,I","file":"static/js/main.930d85c4.chunk.js","sourcesContent":["import \"./styles.css\";\n// import React, { useState } from \"react\";\n\n// var headingText = \"welcome\";\n// var color = \"skyblue\";\n// var color2 = \"gray\";\n// // var count = 0;\n\n// // var userName = prompt(\"you are\");\n\n// export default function App() {\n//   const [likeCounter, setLikeCounter] = useState(0);\n//   function likeClickHandler() {\n//     var newLikeCounterValue = likeCounter + 1; //processing\n//     // console.log(\"clicked\", newLikeCounter);\n//     setLikeCounter(newLikeCounterValue); //processing/output\n//   }\n\n//   return (\n//     <div className=\"App\">\n//       <h1 style={{ color, backgroundColor: color2 }}>{headingText}</h1>\n//       {/* <h2>{counta}</h2> */}\n//       {/* <h2>{count}</h2> */}\n//       <h2>\n//         {/* {console.log} */}\n//         {/* <span style={{ color: \"green\" }}> {userName}</span> */}\n//         <button onClick={likeClickHandler}>like me</button> {likeCounter}\n//         {/* <button onClick={() => setCounta(counta + 1)}> +count+</button> */}\n//         {/* <button onClick={count}> count</button> */}\n//       </h2>\n//     </div>\n//   );\n// }\n\nimport React, { useState } from \"react\";\n// import \"./condition\";\n// import condition from \"./condition\";\n\nvar emojiDictonary = {\n  \"üòÄ\": \"Grinning Face\",\n  \"üòÉ\": \"Grinning Face with Big Eyes\",\n  \"üòÑ\": \"Grinning Face with Smiling Eyes\",\n  \"üòÅ\": \"Beaming Face with Smiling Eyes\",\n  \"üòÜ\": \"Grinning Squinting Face\",\n  \"üòÖ\": \"Grinning Face with Sweat\",\n  \"ü§£\": \"Rolling on the Floor Laughing\",\n  \"üòÇ\": \"Face with Tears of Joy\",\n  \"üôÇ\": \"Slightly Smiling Face\",\n  \"üôÉ\": \"Upside-Down Face\",\n  \"üòä\": \"Smiling Face with Smiling Eyes\",\n  \"üòá\": \"Smiling Face with Hallo\",\n  \"ü•∞\": \"Smiling Face with Hearts\"\n};\nvar emojiWeKnow = Object.keys(emojiDictonary);\n\nexport default function App() {\n  const [meaning, setMeaning] = useState(\"\");\n\n  function emojiInputHandler(event) {\n    var userInput = event.target.value;\n    var meaning = emojiDictonary[userInput];\n\n    if (meaning === undefined) {\n      meaning = \"sorry mate\";\n    }\n\n    setMeaning(meaning);\n  }\n  function emojiClickHandler(emoji) {\n    var meaning = emojiDictonary[emoji];\n    setMeaning(meaning);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Put Something.....</h1>\n\n      <input onChange={emojiInputHandler} />\n      <h2>{meaning}</h2>\n\n      <h3>Emoji We Know..!.</h3>\n      {emojiWeKnow.map(function (emoji) {\n        return (\n          <span\n            onClick={() => emojiClickHandler(emoji)}\n            style={{ fontSize: \"2rem\", padding: \"2rem\", cursor: \"pointer\" }}\n            key={emoji}\n          >\n            {emoji}\n          </span>\n        );\n      })}\n    </div>\n  );\n}\n\n//  var shoppingList=[\"potato\", \"Water\", \"flower\",\"milk\", \"chocolate\", \"5Star\",   \"cold-Drink\"];\n\n// export default function App() {\n\n//    function getBg(index){\n//      if(index % 2 === 0){\n//        return \"green\"\n//      }return \"red\"\n//    }\n\n// console.log(Object.keys(shoppingList))\n\n// function listItemClickHandler(item){\n//   console.log(\"Clicked\", item);\n// }\n\n//   return (\n//     <div className=\"App\">\n//       <h1>My Shopping List... </h1>\n//       <ul>\n\n//       {shoppingList.map(function(item, index) {\n//        return <li key={item}\n//        onClick={()=>listItemClickHandler(item)}\n//        style={{ backgroundColor: getBg(index), padding:\"1rem\" }} >{item}</li>\n\n//       })}\n//       </ul>\n//       {/* <condition /> */}\n//     </div>\n//   );\n// }\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}